1. List all customers who have placed an order (INNER JOIN)
SELECT c.customer_id, c.first_name || ' ' || c.last_name AS full_name, c.age, c.country, 
       o.order_id, o.item, o.amount 
FROM Customers c 
JOIN Orders o ON c.customer_id = o.customer_id 
ORDER BY o.customer_id;


2. List all orders along with customer full names (LEFT JOIN)
SELECT c.first_name || ' ' || c.last_name AS customer_full_name, o.* 
FROM Orders o 
LEFT JOIN Customers c ON c.customer_id = o.customer_id;


3. Find total amount spent by each customer (GROUP BY + SUM)
SELECT c.first_name || ' ' || c.last_name AS customer_full_name, 
       SUM(o.amount) AS total_spent 
FROM Orders o 
JOIN Customers c ON c.customer_id = o.customer_id 
GROUP BY customer_full_name;


4. List customers who ordered 'Keyboard'
SELECT c.first_name || ' ' || c.last_name AS customer_full_name 
FROM Orders o 
JOIN Customers c ON c.customer_id = o.customer_id 
WHERE o.item = 'Keyboard';


5. Customers with more than one order
SELECT c.first_name || ' ' || c.last_name AS customer_full_name, 
       COUNT(o.order_id) AS num_of_orders 
FROM Customers c 
JOIN Orders o ON c.customer_id = o.customer_id 
GROUP BY customer_full_name 
HAVING COUNT(o.order_id) > 1;


6. List all customers and their orders (including those with no orders)
SELECT c.first_name || ' ' || c.last_name AS customer_full_name, 
       c.customer_id, o.order_id, o.item, o.amount 
FROM Customers c 
LEFT JOIN Orders o ON c.customer_id = o.customer_id;


7. Customers who haven’t placed any orders
SELECT c.first_name || ' ' || c.last_name AS customer_full_name, 
       c.customer_id 
FROM Customers c 
LEFT JOIN Orders o ON c.customer_id = o.customer_id 
WHERE o.order_id IS NULL;


8. Total amount spent by each customer (show 0 if no orders)
SELECT c.customer_id, c.first_name || ' ' || c.last_name AS customer_full_name, 
       COALESCE(SUM(o.amount), 0) AS total_spent 
FROM Customers c 
LEFT JOIN Orders o ON c.customer_id = o.customer_id 
GROUP BY c.customer_id, customer_full_name;


9. Orders placed by customers from UK
SELECT o.order_id, c.first_name || ' ' || c.last_name AS customer_full_name, 
       o.item, o.amount, c.country 
FROM Customers c 
JOIN Orders o ON c.customer_id = o.customer_id 
WHERE c.country = 'UK';


10. Total spending by customers from each country
SELECT c.country, SUM(o.amount) AS total_spent 
FROM Customers c 
JOIN Orders o ON c.customer_id = o.customer_id 
GROUP BY c.country;


11. Customers who ordered both 'Mouse' and 'Keyboard'
SELECT c.customer_id, c.first_name || ' ' || c.last_name AS customer_full_name 
FROM Customers c 
JOIN Orders o ON c.customer_id = o.customer_id 
WHERE o.item IN ('Mouse', 'Keyboard') 
GROUP BY c.customer_id, c.first_name, c.last_name 
HAVING COUNT(DISTINCT o.item) = 2;

✅ Using SELF JOIN
SELECT DISTINCT c.customer_id, c.first_name || ' ' || c.last_name AS customer_full_name 
FROM Customers c 
JOIN Orders o1 ON c.customer_id = o1.customer_id AND o1.item = 'Keyboard' 
JOIN Orders o2 ON c.customer_id = o2.customer_id AND o2.item = 'Mouse';


12. Distinct items ordered by customers from USA
SELECT DISTINCT o.item 
FROM Customers c 
JOIN Orders o ON c.customer_id = o.customer_id 
WHERE c.country = 'USA';
